// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package com.coreos.jetcd;

/**
 * Protobuf type {@code jetcd.AuthRoleGrantPermissionRequest}
 */
public  final class AuthRoleGrantPermissionRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:jetcd.AuthRoleGrantPermissionRequest)
    AuthRoleGrantPermissionRequestOrBuilder {
  // Use AuthRoleGrantPermissionRequest.newBuilder() to construct.
  private AuthRoleGrantPermissionRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private AuthRoleGrantPermissionRequest() {
    name_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private AuthRoleGrantPermissionRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            com.coreos.jetcd.Permission.Builder subBuilder = null;
            if (perm_ != null) {
              subBuilder = perm_.toBuilder();
            }
            perm_ = input.readMessage(com.coreos.jetcd.Permission.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(perm_);
              perm_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.coreos.jetcd.EtcdJavaProto.internal_static_jetcd_AuthRoleGrantPermissionRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.coreos.jetcd.EtcdJavaProto.internal_static_jetcd_AuthRoleGrantPermissionRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.coreos.jetcd.AuthRoleGrantPermissionRequest.class, com.coreos.jetcd.AuthRoleGrantPermissionRequest.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * name is the name of the role which will be granted the permission.
   * </pre>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * name is the name of the role which will be granted the permission.
   * </pre>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PERM_FIELD_NUMBER = 2;
  private com.coreos.jetcd.Permission perm_;
  /**
   * <code>optional .jetcd.Permission perm = 2;</code>
   *
   * <pre>
   * perm is the permission to grant to the role.
   * </pre>
   */
  public boolean hasPerm() {
    return perm_ != null;
  }
  /**
   * <code>optional .jetcd.Permission perm = 2;</code>
   *
   * <pre>
   * perm is the permission to grant to the role.
   * </pre>
   */
  public com.coreos.jetcd.Permission getPerm() {
    return perm_ == null ? com.coreos.jetcd.Permission.getDefaultInstance() : perm_;
  }
  /**
   * <code>optional .jetcd.Permission perm = 2;</code>
   *
   * <pre>
   * perm is the permission to grant to the role.
   * </pre>
   */
  public com.coreos.jetcd.PermissionOrBuilder getPermOrBuilder() {
    return getPerm();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
    }
    if (perm_ != null) {
      output.writeMessage(2, getPerm());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
    }
    if (perm_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getPerm());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.coreos.jetcd.AuthRoleGrantPermissionRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.coreos.jetcd.AuthRoleGrantPermissionRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.coreos.jetcd.AuthRoleGrantPermissionRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.coreos.jetcd.AuthRoleGrantPermissionRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.coreos.jetcd.AuthRoleGrantPermissionRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.coreos.jetcd.AuthRoleGrantPermissionRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.coreos.jetcd.AuthRoleGrantPermissionRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.coreos.jetcd.AuthRoleGrantPermissionRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.coreos.jetcd.AuthRoleGrantPermissionRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.coreos.jetcd.AuthRoleGrantPermissionRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.coreos.jetcd.AuthRoleGrantPermissionRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code jetcd.AuthRoleGrantPermissionRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:jetcd.AuthRoleGrantPermissionRequest)
      com.coreos.jetcd.AuthRoleGrantPermissionRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.coreos.jetcd.EtcdJavaProto.internal_static_jetcd_AuthRoleGrantPermissionRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.coreos.jetcd.EtcdJavaProto.internal_static_jetcd_AuthRoleGrantPermissionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.coreos.jetcd.AuthRoleGrantPermissionRequest.class, com.coreos.jetcd.AuthRoleGrantPermissionRequest.Builder.class);
    }

    // Construct using com.coreos.jetcd.AuthRoleGrantPermissionRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      name_ = "";

      if (permBuilder_ == null) {
        perm_ = null;
      } else {
        perm_ = null;
        permBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.coreos.jetcd.EtcdJavaProto.internal_static_jetcd_AuthRoleGrantPermissionRequest_descriptor;
    }

    public com.coreos.jetcd.AuthRoleGrantPermissionRequest getDefaultInstanceForType() {
      return com.coreos.jetcd.AuthRoleGrantPermissionRequest.getDefaultInstance();
    }

    public com.coreos.jetcd.AuthRoleGrantPermissionRequest build() {
      com.coreos.jetcd.AuthRoleGrantPermissionRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.coreos.jetcd.AuthRoleGrantPermissionRequest buildPartial() {
      com.coreos.jetcd.AuthRoleGrantPermissionRequest result = new com.coreos.jetcd.AuthRoleGrantPermissionRequest(this);
      result.name_ = name_;
      if (permBuilder_ == null) {
        result.perm_ = perm_;
      } else {
        result.perm_ = permBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.coreos.jetcd.AuthRoleGrantPermissionRequest) {
        return mergeFrom((com.coreos.jetcd.AuthRoleGrantPermissionRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.coreos.jetcd.AuthRoleGrantPermissionRequest other) {
      if (other == com.coreos.jetcd.AuthRoleGrantPermissionRequest.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasPerm()) {
        mergePerm(other.getPerm());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.coreos.jetcd.AuthRoleGrantPermissionRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.coreos.jetcd.AuthRoleGrantPermissionRequest) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * name is the name of the role which will be granted the permission.
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * name is the name of the role which will be granted the permission.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * name is the name of the role which will be granted the permission.
     * </pre>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * name is the name of the role which will be granted the permission.
     * </pre>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * name is the name of the role which will be granted the permission.
     * </pre>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.coreos.jetcd.Permission perm_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.coreos.jetcd.Permission, com.coreos.jetcd.Permission.Builder, com.coreos.jetcd.PermissionOrBuilder> permBuilder_;
    /**
     * <code>optional .jetcd.Permission perm = 2;</code>
     *
     * <pre>
     * perm is the permission to grant to the role.
     * </pre>
     */
    public boolean hasPerm() {
      return permBuilder_ != null || perm_ != null;
    }
    /**
     * <code>optional .jetcd.Permission perm = 2;</code>
     *
     * <pre>
     * perm is the permission to grant to the role.
     * </pre>
     */
    public com.coreos.jetcd.Permission getPerm() {
      if (permBuilder_ == null) {
        return perm_ == null ? com.coreos.jetcd.Permission.getDefaultInstance() : perm_;
      } else {
        return permBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .jetcd.Permission perm = 2;</code>
     *
     * <pre>
     * perm is the permission to grant to the role.
     * </pre>
     */
    public Builder setPerm(com.coreos.jetcd.Permission value) {
      if (permBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        perm_ = value;
        onChanged();
      } else {
        permBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .jetcd.Permission perm = 2;</code>
     *
     * <pre>
     * perm is the permission to grant to the role.
     * </pre>
     */
    public Builder setPerm(
        com.coreos.jetcd.Permission.Builder builderForValue) {
      if (permBuilder_ == null) {
        perm_ = builderForValue.build();
        onChanged();
      } else {
        permBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .jetcd.Permission perm = 2;</code>
     *
     * <pre>
     * perm is the permission to grant to the role.
     * </pre>
     */
    public Builder mergePerm(com.coreos.jetcd.Permission value) {
      if (permBuilder_ == null) {
        if (perm_ != null) {
          perm_ =
            com.coreos.jetcd.Permission.newBuilder(perm_).mergeFrom(value).buildPartial();
        } else {
          perm_ = value;
        }
        onChanged();
      } else {
        permBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .jetcd.Permission perm = 2;</code>
     *
     * <pre>
     * perm is the permission to grant to the role.
     * </pre>
     */
    public Builder clearPerm() {
      if (permBuilder_ == null) {
        perm_ = null;
        onChanged();
      } else {
        perm_ = null;
        permBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .jetcd.Permission perm = 2;</code>
     *
     * <pre>
     * perm is the permission to grant to the role.
     * </pre>
     */
    public com.coreos.jetcd.Permission.Builder getPermBuilder() {
      
      onChanged();
      return getPermFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .jetcd.Permission perm = 2;</code>
     *
     * <pre>
     * perm is the permission to grant to the role.
     * </pre>
     */
    public com.coreos.jetcd.PermissionOrBuilder getPermOrBuilder() {
      if (permBuilder_ != null) {
        return permBuilder_.getMessageOrBuilder();
      } else {
        return perm_ == null ?
            com.coreos.jetcd.Permission.getDefaultInstance() : perm_;
      }
    }
    /**
     * <code>optional .jetcd.Permission perm = 2;</code>
     *
     * <pre>
     * perm is the permission to grant to the role.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.coreos.jetcd.Permission, com.coreos.jetcd.Permission.Builder, com.coreos.jetcd.PermissionOrBuilder> 
        getPermFieldBuilder() {
      if (permBuilder_ == null) {
        permBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.coreos.jetcd.Permission, com.coreos.jetcd.Permission.Builder, com.coreos.jetcd.PermissionOrBuilder>(
                getPerm(),
                getParentForChildren(),
                isClean());
        perm_ = null;
      }
      return permBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:jetcd.AuthRoleGrantPermissionRequest)
  }

  // @@protoc_insertion_point(class_scope:jetcd.AuthRoleGrantPermissionRequest)
  private static final com.coreos.jetcd.AuthRoleGrantPermissionRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.coreos.jetcd.AuthRoleGrantPermissionRequest();
  }

  public static com.coreos.jetcd.AuthRoleGrantPermissionRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<AuthRoleGrantPermissionRequest>
      PARSER = new com.google.protobuf.AbstractParser<AuthRoleGrantPermissionRequest>() {
    public AuthRoleGrantPermissionRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new AuthRoleGrantPermissionRequest(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<AuthRoleGrantPermissionRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<AuthRoleGrantPermissionRequest> getParserForType() {
    return PARSER;
  }

  public com.coreos.jetcd.AuthRoleGrantPermissionRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

