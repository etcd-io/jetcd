// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package com.coreos.jetcd;

public interface TxnRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:jetcd.TxnRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .jetcd.Compare compare = 1;</code>
   *
   * <pre>
   * compare is a list of predicates representing a conjunction of terms.
   * If the comparisons succeed, then the success requests will be processed in order,
   * and the response will contain their respective responses in order.
   * If the comparisons fail, then the failure requests will be processed in order,
   * and the response will contain their respective responses in order.
   * </pre>
   */
  java.util.List<com.coreos.jetcd.Compare> 
      getCompareList();
  /**
   * <code>repeated .jetcd.Compare compare = 1;</code>
   *
   * <pre>
   * compare is a list of predicates representing a conjunction of terms.
   * If the comparisons succeed, then the success requests will be processed in order,
   * and the response will contain their respective responses in order.
   * If the comparisons fail, then the failure requests will be processed in order,
   * and the response will contain their respective responses in order.
   * </pre>
   */
  com.coreos.jetcd.Compare getCompare(int index);
  /**
   * <code>repeated .jetcd.Compare compare = 1;</code>
   *
   * <pre>
   * compare is a list of predicates representing a conjunction of terms.
   * If the comparisons succeed, then the success requests will be processed in order,
   * and the response will contain their respective responses in order.
   * If the comparisons fail, then the failure requests will be processed in order,
   * and the response will contain their respective responses in order.
   * </pre>
   */
  int getCompareCount();
  /**
   * <code>repeated .jetcd.Compare compare = 1;</code>
   *
   * <pre>
   * compare is a list of predicates representing a conjunction of terms.
   * If the comparisons succeed, then the success requests will be processed in order,
   * and the response will contain their respective responses in order.
   * If the comparisons fail, then the failure requests will be processed in order,
   * and the response will contain their respective responses in order.
   * </pre>
   */
  java.util.List<? extends com.coreos.jetcd.CompareOrBuilder> 
      getCompareOrBuilderList();
  /**
   * <code>repeated .jetcd.Compare compare = 1;</code>
   *
   * <pre>
   * compare is a list of predicates representing a conjunction of terms.
   * If the comparisons succeed, then the success requests will be processed in order,
   * and the response will contain their respective responses in order.
   * If the comparisons fail, then the failure requests will be processed in order,
   * and the response will contain their respective responses in order.
   * </pre>
   */
  com.coreos.jetcd.CompareOrBuilder getCompareOrBuilder(
      int index);

  /**
   * <code>repeated .jetcd.RequestOp success = 2;</code>
   *
   * <pre>
   * success is a list of requests which will be applied when compare evaluates to true.
   * </pre>
   */
  java.util.List<com.coreos.jetcd.RequestOp> 
      getSuccessList();
  /**
   * <code>repeated .jetcd.RequestOp success = 2;</code>
   *
   * <pre>
   * success is a list of requests which will be applied when compare evaluates to true.
   * </pre>
   */
  com.coreos.jetcd.RequestOp getSuccess(int index);
  /**
   * <code>repeated .jetcd.RequestOp success = 2;</code>
   *
   * <pre>
   * success is a list of requests which will be applied when compare evaluates to true.
   * </pre>
   */
  int getSuccessCount();
  /**
   * <code>repeated .jetcd.RequestOp success = 2;</code>
   *
   * <pre>
   * success is a list of requests which will be applied when compare evaluates to true.
   * </pre>
   */
  java.util.List<? extends com.coreos.jetcd.RequestOpOrBuilder> 
      getSuccessOrBuilderList();
  /**
   * <code>repeated .jetcd.RequestOp success = 2;</code>
   *
   * <pre>
   * success is a list of requests which will be applied when compare evaluates to true.
   * </pre>
   */
  com.coreos.jetcd.RequestOpOrBuilder getSuccessOrBuilder(
      int index);

  /**
   * <code>repeated .jetcd.RequestOp failure = 3;</code>
   *
   * <pre>
   * failure is a list of requests which will be applied when compare evaluates to false.
   * </pre>
   */
  java.util.List<com.coreos.jetcd.RequestOp> 
      getFailureList();
  /**
   * <code>repeated .jetcd.RequestOp failure = 3;</code>
   *
   * <pre>
   * failure is a list of requests which will be applied when compare evaluates to false.
   * </pre>
   */
  com.coreos.jetcd.RequestOp getFailure(int index);
  /**
   * <code>repeated .jetcd.RequestOp failure = 3;</code>
   *
   * <pre>
   * failure is a list of requests which will be applied when compare evaluates to false.
   * </pre>
   */
  int getFailureCount();
  /**
   * <code>repeated .jetcd.RequestOp failure = 3;</code>
   *
   * <pre>
   * failure is a list of requests which will be applied when compare evaluates to false.
   * </pre>
   */
  java.util.List<? extends com.coreos.jetcd.RequestOpOrBuilder> 
      getFailureOrBuilderList();
  /**
   * <code>repeated .jetcd.RequestOp failure = 3;</code>
   *
   * <pre>
   * failure is a list of requests which will be applied when compare evaluates to false.
   * </pre>
   */
  com.coreos.jetcd.RequestOpOrBuilder getFailureOrBuilder(
      int index);
}
